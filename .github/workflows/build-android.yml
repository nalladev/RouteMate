# ðŸš€ Optimized Flutter Android build workflow (parallel APK + AAB)
name: Build and Release Android App

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      # --- ADDED: Makes the version name available to other jobs ---
      version_name: ${{ steps.get_version.outputs.version_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 17

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Cache Gradle Dependencies
        id: cache-gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache Flutter Pub Dependencies
        id: cache-flutter
        uses: actions/cache@v4
        with:
          path: |
            $HOME/.flutter/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Get Flutter dependencies
        run: flutter pub get

      # --- ADDED: New step to extract version from the Git tag ---
      - name: Get version from tag
        id: get_version
        run: echo "version_name=${GITHUB_REF#refs/tags/v}" >> "$GITHUB_OUTPUT"

      - name: Decode Keystore and Create Properties
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/upload-keystore.jks
          cat > android/key.properties <<EOF
          storePassword=${{ secrets.STORE_PASSWORD }}
          keyPassword=${{ secrets.KEY_PASSWORD }}
          keyAlias=${{ secrets.KEY_ALIAS }}
          storeFile=upload-keystore.jks
          EOF

  build_apk:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Restore Flutter & Gradle Caches
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.pub-cache
          key: ${{ runner.os }}-flutter-gradle-${{ github.ref }}

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Decode Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/upload-keystore.jks
          cat > android/key.properties <<EOF
          storePassword=${{ secrets.STORE_PASSWORD }}
          keyPassword=${{ secrets.KEY_PASSWORD }}
          keyAlias=${{ secrets.KEY_ALIAS }}
          storeFile=upload-keystore.jks
          EOF

      # --- MODIFIED: Build command now includes version flags ---
      - name: Build Universal APK
        run: >
          flutter build apk --release
          --build-name=${{ needs.setup.outputs.version_name }}
          --build-number=${{ github.run_number }}

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

  build_aab:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Restore Flutter & Gradle Caches
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.pub-cache
          key: ${{ runner.os }}-flutter-gradle-${{ github.ref }}

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Decode Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/upload-keystore.jks
          cat > android/key.properties <<EOF
          storePassword=${{ secrets.STORE_PASSWORD }}
          keyPassword=${{ secrets.KEY_PASSWORD }}
          keyAlias=${{ secrets.KEY_ALIAS }}
          storeFile=upload-keystore.jks
          EOF

      # --- MODIFIED: Build command now includes version flags ---
      - name: Build App Bundle
        run: >
          flutter build appbundle --release
          --build-name=${{ needs.setup.outputs.version_name }}
          --build-number=${{ github.run_number }}

      - name: Upload AAB Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-aab
          path: build/app/outputs/bundle/release/app-release.aab

  release:
    needs: [build_apk, build_aab]
    runs-on: ubuntu-latest
    steps:
      - name: Download APK Artifact
        uses: actions/download-artifact@v4
        with:
          name: app-release-apk
          path: ./release

      - name: Download AAB Artifact
        uses: actions/download-artifact@v4
        with:
          name: app-release-aab
          path: ./release

      - name: Create GitHub Release and Upload Assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: |
            ./release/app-release.apk
            ./release/app-release.aab
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
