# .github/workflows/build-android.yml

name: Build and Release Android App

on:
  push:
    branches:
      - master # This workflow runs on every push to your master branch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Decode Keystore and Create Properties
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/upload-keystore.jks
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=upload-keystore.jks" >> android/key.properties

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --release

      - name: Build App Bundle (AAB)
        run: flutter build appbundle --release
      
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          # A comma-separated list of files to attach to the release
          artifacts: "build/app/outputs/flutter-apk/app-release.apk,build/app/outputs/bundle/release/app-release.aab"
          # The token is automatically provided by GitHub for authentication
          token: ${{ secrets.GITHUB_TOKEN }}
          # This will create a Git tag from the version in your pubspec.yaml file
          tag: v$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2)

